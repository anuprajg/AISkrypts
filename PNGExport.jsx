// v1.1// Set Resolution herevar width = 1920;// Function to set the export to PNGfunction exportFileToPNG(dest, artBoardIndex, scaleTo){    var exportOptions = new ExportOptionsPNG24(); // or ExportOptionsPNG8    var type = ExportType.PNG24; // or ExportType.PNG8    var file = new File(dest + ".png");    exportOptions.artBoardClipping = true;    exportOptions.antiAliasing = true;    exportOptions.transparency = true;    exportOptions.verticalScale = scaleTo;    exportOptions.horizontalScale = scaleTo;    exportOptions.qualitySetting = 72;    exportOptions.saveMultipleArtboards = false;    exportOptions.artboardRange = "" + artBoardIndex;    app.activeDocument.exportFile( file, type, exportOptions );}// Main Functionfunction execute(){    if (app.documents.length == 0)    {        alert('No document open', 'Error');        return;    }        if (app.activeDocument.selection.length == 0)    {        alert('Nothing selected', 'Error');        return;    }    // determine destination    var docRef = app.activeDocument;    var destFolder = docRef.path;    if(destFolder == ""){        destFolder = Folder.selectDialog('Select the folder to export to:');    }    // Loop through the selection and export selected    for (var i=0; i< app.activeDocument.selection.length; i++)    {                // Set selected stuff for easy naming        var selectedStuff = app.activeDocument.selection[i];        // Remember original position        var oldPosition = selectedStuff.position;        // snap position to pixels        selectedStuff.position = [ Math.round(selectedStuff.position[0]), Math.round(selectedStuff.position[1]) ];        // create temporary artboad for exporting                try        {            var rect = selectedStuff.visibleBounds;            docRef.artboards.add(rect);            var scaleTo = width / (rect[2] - rect[0]) * 100;        }        catch(e)        {            alert(e);            alert('Could not create Artboard as step of export.', 'Failure');            //Restore old position            selectedStuff.position = oldPosition            return;        }        if(destFolder)        {            try            {                exportFileToPNG(destFolder + "/" + docRef.name + i, docRef.artboards.length, scaleTo);            }            catch(e) {}        }        //Restore position        selectedStuff.position = oldPosition        // delete temp-artboard        docRef.artboards.remove(docRef.artboards.length - 1);    }}execute();